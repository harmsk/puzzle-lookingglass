13100_set_vehicle_in_scene:
  crawler_param2: 0
  crawler_param3: -1
  type_cd: <%= CodeTest.skill %>
  snippet: "object_vehicle_map = {}\nmin_len = 1\nfor es in esList:\n\tif InternalAPI.getEncasingUserMethod(es).getName() == \"performGeneratedSetUp\":\n\t\tname = MethodsAPI.getMethod( es ).getName()\n\t\tif name == \"setVehicle\":\n\t\t\tvehicle = MethodsAPI.getParametersAsMap(es).get(\"vehicle\")\n\t\t\tif not vehicle == None and not vehicle.__str__() == \"ThisExpression[]\":\n\t\t\t\tif not MethodsAPI.getCaller(es) == None:\n\t\t\t\t\tif MethodsAPI.getCaller(es).__str__() == \"FieldAccess[]\":\n\t\t\t\t\t\tobjName = MethodsAPI.getCaller(es).field.getValue().getName()\n\t\t\t\t\tif objName not in object_vehicle_map.keys():\n\t\t\t\t\t\tobject_vehicle_map[objName] = vehicle.field.getValue().getName()\nif len(object_vehicle_map.keys()) < min_len:\n\tprint \"Failed: not enough objects had their vehicle changed\"\n\treturn list()\nfor o in object_vehicle_map.keys():\n\tprint o,\"'s vehicle was changed to\", object_vehicle_map[o],\"in scene setup\"\nreturn list()"
  id: 13100
  title: set_vehicle_in_scene
  description: set a character or object's vehicle in scene setup mode
  crawler_cd: <%= CodeTest.spread_expression_statement %>
  user_id: 1
  crawler_param1: 1
  crawl_cd: <%= CodeTest.expressionstatement %>
  published_cd: <%= CodeTest.ispublished %>
  return_cd: <%= CodeTest.nodeholder %>
